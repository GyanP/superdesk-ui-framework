"use strict";function sdDropdown($window){return{link:function(scope,elem){function closeToBottom(event){return event.clientY>$window.innerHeight-(menu.outerHeight()+button.outerHeight())}function closeToLeft(){return elem.offset().left<menu.outerWidth()}function closeToRight(){return $window.innerWidth-elem.offset().left<menu.outerWidth()}var menu=elem.children(".dropdown__menu"),button=elem.children("[dropdown__toggle]"),settings={isTopOriented:menu.hasClass("dropdown--dropup"),isRightOriented:menu.hasClass("dropdown--align-right"),isInlineOriented:elem.hasClass("dropdown--dropright")||elem.hasClass("dropdown--dropleft")};button.bind("click mouseover",function(event){closeToBottom(event)?elem.addClass("dropdown--dropup"):settings.isTopOriented||elem.removeClass("dropdown--dropup"),closeToLeft()?menu.removeClass("dropdown--align-right"):settings.isRightOriented&&menu.addClass("dropdown--align-right"),closeToRight()?menu.addClass("dropdown--align-right"):settings.isRightOriented||menu.removeClass("dropdown--align-right")})}}}function sdDropdownAppendToBody($window){return{require:"dropdown",link:function(scope,elem,attr,ctrl){function closeToRight(menu){return $window.innerWidth-elem.offset().left<menu.outerWidth()}var button=elem.find("[dropdown__toggle]");scope.$watch(ctrl.isOpen,function(isOpen){if(!isOpen)return!1;var style={display:isOpen?"block":"none",top:elem.offset().top+button.outerHeight(),left:elem.offset().left,opacity:1};scope.$evalAsync(function(){ctrl.dropdownMenu.css({opacity:0})}),scope.$applyAsync(function(){elem.hasClass("dropdown--dropup")&&(style.top=elem.offset().top-ctrl.dropdownMenu.outerHeight()),closeToRight(ctrl.dropdownMenu)&&(style.left=$window.innerWidth-ctrl.dropdownMenu.outerWidth()-15),ctrl.dropdownMenu.css(style)})})}}}function sdModal($document){return{template:['<div class="modal" data-backdrop="static">','<div class="modal__dialog" ng-if="model"><div class="modal__content" ng-transclude></div></div>','</div><div class="modal__backdrop fade in" ng-if="model"></div>'].join(""),transclude:!0,scope:{model:"="},link:function(scope,element){function initialized(){return _initialized&&content}var content,_initialized=!1;scope.$watch("model",function(){scope.model?(initialized()||(content=element.children(),content.addClass(element.attr("class")),content.appendTo($document.find("body")),content[0].foo="bar",_initialized=!0),content.show().addClass("in"),$document.find("body").addClass("modal-open")):initialized()&&(content.hide().removeClass("in"),$document.find("body").removeClass("modal-open"),closeModal())});var closeModal=function(){scope.model=!1,scope.$evalAsync()};scope.$on("$destroy",function(){initialized()&&(content.hide(),content.remove())})}}}function sdSwitch(){return{require:"ngModel",replace:!0,template:['<span class="sd-toggle">','<span class="inner"></span>',"</span>"].join(""),link:function($scope,element,attrs,ngModel){function render(element,value){element.toggleClass("checked",!!value),element.attr("checked",!!value)}var Keys={pageup:33,pagedown:34,left:37,up:38,right:39,down:40,enter:13,escape:27,space:32,backspace:8};ngModel.$render=function(){render(element,ngModel.$viewValue)},element.bind("keydown",function(e){if(e.keyCode===Keys.enter||e.keyCode===Keys.space)return e.preventDefault(),$scope.$apply(function(){ngModel.$setViewValue(!ngModel.$viewValue)}),!1}),$scope.$watch(attrs.ngModel,function(){render(element,ngModel.$viewValue)}),element.on("click",function(e){return $scope.$apply(function(){ngModel.$setViewValue(!ngModel.$viewValue)}),!1}),$scope.$on("$destroy",function(){element.unbind("keydown"),element.off("click")})}}}function sdCheck(){return{require:"ngModel",replace:!0,transclude:!0,template:'<span class="sd-check__wrapper"><span class="sd-checkbox"></span><label ng-transclude></label></span>',link:function($scope,element,attrs,ngModel){function render(label,checkbox,value){"radio"===attrs.type&&(value=ngModel.$viewValue===attrs.ngValue,checkbox.addClass("sd-checkbox--radio")),attrs.disabled&&(checkbox.addClass("sd-checkbox sd-checkbox--disabled"),label.addClass("sd-label--disabled")),checkbox.toggleClass("checked",!!value).attr("checked",!!value),"inside"!==attrs.labelPosition&&label.toggleClass("label--active",!!value)}var label=element.find("label"),checkbox=element.find("span");ngModel.$render=function(){render(label,checkbox,ngModel.$viewValue)},$scope.$watch(attrs.ngModel,function(){render(label,checkbox,ngModel.$viewValue)}),element.on("click",function(){if(attrs.disabled)return!1;$scope.$apply(function(){return"radio"===attrs.type?ngModel.$setViewValue(attrs.ngValue):ngModel.$setViewValue(!ngModel.$viewValue)})}),"inside"===attrs.labelPosition?checkbox.append(label).addClass("sd-checkbox sd-checkbox--button-style"):"left"===attrs.labelPosition&&label.after(checkbox)}}}angular.module("superdesk-ui",["ui.bootstrap","superdesk-ui.dropdown","superdesk-ui.modals","superdesk-ui.switch","superdesk-ui.check"]),sdDropdown.$inject=["$window"],sdDropdownAppendToBody.$inject=["$window"],angular.module("superdesk-ui.dropdown",[]).directive("dropdown",sdDropdown).directive("dropdownAppendToBody",sdDropdownAppendToBody),sdModal.$inject=["$document"],angular.module("superdesk-ui.modals",[]).directive("sdModal",sdModal),sdSwitch.$inject=[],angular.module("superdesk-ui.switch",[]).directive("sdSwitch",sdSwitch),sdCheck.$inject=[],angular.module("superdesk-ui.check",[]).directive("sdCheck",sdCheck);
//# sourceMappingURL=superdesk-ui-framework.js.map